@model CourseStatisticViewModel
@{
    ViewData["Title"] = "Thống kê theo khóa học";
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Thống kê theo khóa học</h1>
            </div>
        </div>
    </div>
</section>

<section class="content">
    <div class="container-fluid">
        <div class="card">
            <div class="card-body p-2">
                <div class="row">
                    <div class="col-12">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">Chọn khóa học</span>
                            </div>
                            <select id="courseSelect" class="form-control">
                                @foreach (var course in Model.CourseListItems)
                                {
                                    <option value="@course.Id">@course.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Course Statistics Content -->
        <div id="courseStatisticsContent">
            @await Html.PartialAsync("_CourseStatistics", Model)
        </div>
    </div>
</section>

@section Scripts {
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/exceljs/4.3.0/exceljs.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script>
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(initializeCharts);

        $(document).ready(function () {
            var $courseSelect = $('#courseSelect');

            $courseSelect.select2({
                width: '100%',
                placeholder: "Chọn khóa học",
                allowClear: true
            });

            $courseSelect.on('select2:open', function (e) {
                if (!$(this).data('select2-open-handled')) {
                    $(this).data('select2-open-handled', true);
                    $courseSelect.select2('close');
                    var firstCourseId = $courseSelect.val();
                    if (firstCourseId) {
                        loadCourseData(firstCourseId);
                    }
                }
            });

            $courseSelect.on('select2:select', function (e) {
                var selectedCourseId = e.params.data.id;
                loadCourseData(selectedCourseId);
            });
        });

        function loadCourseData(selectedCourseId) {
            $.ajax({
                url: '@Url.Action("GetCourseStatistics", "CourseStatistics")',
                type: 'GET',
                data: { courseId: selectedCourseId },
                success: function (result) {
                    $('#courseStatisticsContent').html(result);
                    initializeCharts();
                    initializeDataTable();
                },
                error: function (error) {
                    console.error('Error loading course data:', error);
                }
            });
        }

        function initializeCharts() {
            if (typeof pieData !== 'undefined' && pieData !== null &&
                typeof achieveTargets !== 'undefined' && achieveTargets !== null) {
                drawPieChart();
                drawLineChart();
            } else {
                console.error("Chart data is not available", { pieData, achieveTargets });
            }
        }

        function drawPieChart() {
            if (!pieData || !Array.isArray(pieData) || pieData.length === 0) {
                console.error("Invalid pieData", pieData);
                return;
            }
            var data = google.visualization.arrayToDataTable(pieData);
            var options = {
                title: 'Tình hình cấp phát và sử dụng mã khóa học',
                is3D: true,
                colors: ['#FF6384', '#36A2EB'],
                legend: { position: 'none' },
                pieSliceText: 'percentage',
                slices: {
                    0: { color: '#FF6384' },
                    1: { color: '#36A2EB' }
                },
                tooltip: { text: 'both' }
            };
            var pieChart = new google.visualization.PieChart(document.getElementById('pie-chart'));
            pieChart.draw(data, options);
        }

        function drawChart() {
            if (typeof achieveTargets === 'undefined' || !achieveTargets.totalEnters ||
                !achieveTargets.totalWatchedAllVideos || !achieveTargets.totalFinishs ||
                !achieveTargets.totalPassed) {
                console.error("Invalid or missing achieveTargets data", achieveTargets);
                return;
            }

            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Ngày');
            data.addColumn('number', 'Tham gia học');
            data.addColumn('number', 'Xem hết tất cả bài học');
            data.addColumn('number', 'Hoàn thành bài kiểm tra');
            data.addColumn('number', 'Vượt qua bài kiểm tra');

            Object.keys(achieveTargets.totalEnters).forEach(dateString => {
                var date = new Date(dateString);
                var formattedDate = date.toLocaleDateString('vi-VN', {
                    day: '2-digit',
                    month: '2-digit',
                    year: 'numeric'
                }).replace(/\//g, '/');

                data.addRow([
                    formattedDate,
                    achieveTargets.totalEnters[dateString] || 0,
                    achieveTargets.totalWatchedAllVideos[dateString] || 0,
                    achieveTargets.totalFinishs[dateString] || 0,
                    achieveTargets.totalPassed[dateString] || 0
                ]);
            });

            var options = {
                title: 'Tình hình đạt chỉ tiêu',
                titleTextStyle: {
                    fontSize: 22,
                    color: '#333',
                    bold: true
                },
                legend: {
                    position: 'bottom',
                    alignment: 'center',
                    textStyle: { fontSize: 12 }
                },
                lineWidth: 2,
                pointSize: 5,
                pointShape: 'circle',
                hAxis: {
                    title: '',
                    textStyle: {
                        fontSize: 11,
                        color: '#666'
                    },
                    gridlines: {
                        color: '#f3f3f3',
                        count: -1
                    },
                    minorGridlines: {
                        color: '#f9f9f9'
                    }
                },
                vAxis: {
                    title: '',
                    textStyle: {
                        fontSize: 11,
                        color: '#666'
                    },
                    gridlines: {
                        color: '#f3f3f3'
                    },
                    minValue: 0,
                    viewWindow: {
                        min: 0
                    }
                },
                colors: [ '#FF0000', '#00CC00', '#FFA500', '#8B00FF'],
                chartArea: {
                    width: '85%',
                    height: '70%'
                },
                backgroundColor: {
                    fill: '#FFFFFF'
                },
                height: 500,
                width: '100%',
                animation: {
                    startup: true,
                    duration: 1000,
                    easing: 'out'
                },
                tooltip: {
                    isHtml: true,
                    trigger: 'both'
                },
                focusTarget: 'category'
            };

            var chart = new google.visualization.LineChart(document.getElementById('curve_chart'));
            chart.draw(data, options);
        }

        function initializeDataTable() {
            if ($.fn.DataTable.isDataTable('#pharmacistTable')) {
                $('#pharmacistTable').DataTable().destroy();
            }
            $('#pharmacistTable').DataTable({
                "paging": true,
                "lengthChange": true,
                "searching": true,
                "ordering": false,
                "order": [[5, "desc"]],
                "info": true,
                "autoWidth": false,
                "responsive": true,
                "pageLength": 10,
                "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "Tất cả"]],
                "language": {
                    "lengthMenu": "Hiển thị _MENU_ dòng mỗi trang",
                    "zeroRecords": "Không tìm thấy dữ liệu",
                    "info": "Hiển thị trang _PAGE_ / _PAGES_",
                    "infoEmpty": "Không có dữ liệu",
                    "infoFiltered": "(lọc từ _MAX_ dòng)",
                    "search": "Tìm kiếm:",
                    "paginate": {
                        "first": "Đầu",
                        "last": "Cuối",
                        "next": "Tiếp",
                        "previous": "Trước"
                    }
                },
                "columnDefs": [
                    {
                        "targets": 5,
                        "type": "date",
                        "render": function (data, type, row) {
                            if (type === "sort" || type === "type") {
                                return data ? moment(data, "DD/MM/YYYY HH:mm").format("YYYY-MM-DD HH:mm") : "";
                            }
                            return data;
                        }
                    }
                ]
            });
        }

        $(document).ready(function () {
            initializeDataTable();
            google.charts.load('current', { 'packages': ['corechart'] });
            google.charts.setOnLoadCallback(drawChart);
        });
        $(document).ready(function () {
            $('#logoutButton').click(function (e) {
                e.preventDefault();
                $.ajax({
                    url: '@Url.Action("Logout", "Account")',
                    type: 'POST',
                    success: function (result) {
                        if (result.success) {
                            window.location.href = result.redirectUrl;
                        } else {
                            console.log('Logout failed');
                        }
                    },
                    error: function (error) {
                        console.log('Logout error:', error);
                    }
                });
            });
        });
    </script>
}