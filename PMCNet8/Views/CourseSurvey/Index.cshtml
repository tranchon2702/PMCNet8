@model SurveyViewModel
@{
    ViewData["Title"] = "Khảo sát khóa học";
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Khảo sát</h1>
            </div>
        </div>
    </div>
</section>
<section class="content">
    <div class="container-fluid">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-12">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <label class="input-group-text" for="courseSelect">Chọn khóa học</label>
                            </div>
                            @if (ViewBag.Courses != null && ((List<SelectListItem>)ViewBag.Courses).Count > 0)
                            {
                                <select id="courseSelect" class="custom-select">
                                    @foreach (var course in ViewBag.Courses)
                                    {
                                        <option value="@course.Value">@course.Text</option>
                                    }
                                </select>
                            }
                            else
                            {
                                <select id="courseSelect" class="custom-select is-invalid" disabled>
                                    <option>Không có khóa học</option>
                                </select>
                            }

                            <div class="input-group-prepend">
                                <label class="input-group-text" for="surveyTypeSelect">Loại khảo sát</label>
                            </div>
                            <select id="surveyTypeSelect" class="custom-select">
                                <option value="0">Trước khóa học</option>
                                <option value="1">Sau khóa học</option>
                            </select>

                            <div class="input-group-prepend">
                                <span class="input-group-text">Từ ngày</span>
                            </div>
                            <input type="text" id="startDate" class="form-control flatpickr" placeholder="dd/mm/yyyy" autocomplete="off">

                            <div class="input-group-prepend">
                                <span class="input-group-text">Đến ngày</span>
                            </div>
                            <input type="text" id="endDate" class="form-control flatpickr" placeholder="dd/mm/yyyy" autocomplete="off">

                            <div class="input-group-append">
                                <button id="viewButton" class="btn btn-primary">Xem</button>
                            </div>
                        </div>
                        @if (ViewBag.Courses == null || ((List<SelectListItem>)ViewBag.Courses).Count == 0)
                        {
                            <div class="invalid-feedback d-block mt-2">
                                @(ViewBag.ErrorMessage ?? "Không có khóa học nào được tìm thấy.")
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="CourseSurvey">@await Html.PartialAsync("_CourseSurvey", Model)</div>
</section>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script>

    <script type="text/javascript">
        $(function () {
            initializePage();
            loadInitialData();
        });

        function initializePage() {
            $('#courseSelect, #surveyTypeSelect').select2();
            flatpickr(".flatpickr", {
                dateFormat: "d/m/Y",
                allowInput: true,
                locale: "vn"
            });
            $('#viewButton').click(loadSurveyData);
            $('#courseSelect, #surveyTypeSelect').change(onSelectionChange);
        }

        function loadInitialData() {
            var courseId = $('#courseSelect').val();
            var surveyType = $('#surveyTypeSelect').val();
            loadSurveyData(courseId, surveyType);
        }

        function onSelectionChange() {
            var courseId = $('#courseSelect').val();
            var surveyType = $('#surveyTypeSelect').val();
            $('#startDate').val('');
            $('#endDate').val('');
            loadSurveyData(courseId, surveyType);
        }

        function loadSurveyData() {
            var courseId = $('#courseSelect').val();
            var surveyType = $('#surveyTypeSelect').val();
            var startDate = $('#startDate').val();
            var endDate = $('#endDate').val();

            $.ajax({
                url: '/CourseSurvey/GetSurveyData',
                type: 'GET',
                data: {
                    courseId: courseId,
                    surveyType: surveyType,
                    startDate: startDate,
                    endDate: endDate
                },
                success: function (data) {
                    $('#CourseSurvey').html(data);
                    initializeCharts();
                    initializeDataTables();
                },
                error: function (xhr, status, error) {
                    console.error('Lỗi khi tải dữ liệu khảo sát:', error);
                    alert('Có lỗi xảy ra khi tải dữ liệu khảo sát. Vui lòng thử lại sau.');
                }
            });
        }
        function initializeCharts() {
            $('.chart-canvas').each(function () {
                var ctx = this.getContext('2d');
                var questionId = $(this).data('question-id');
                var questionType = $(this).data('question-type');
                var options = $(this).data('options');
                var optionCounts = $(this).data('option-counts');
                var optionPercentages = $(this).data('option-percentages');

                var labels = options.map(function (option) { return option.content; });
                var data = labels.map(function (label) { return optionPercentages[label] || 0; });

                var chartType = (questionType.toLowerCase() === 'checkbox' || questionType.toLowerCase() === 'checkboxinput') ? 'bar' : 'pie';

                var chartColors = [
                    'rgba(255, 99, 132, 0.8)',
                    'rgba(54, 162, 235, 0.8)',
                    'rgba(255, 206, 86, 0.8)',
                    'rgba(75, 192, 192, 0.8)',
                    'rgba(153, 102, 255, 0.8)',
                    'rgba(255, 159, 64, 0.8)',
                    'rgba(201, 203, 207, 0.8)'
                ];

                new Chart(ctx, {
                    type: chartType,
                    data: {
                        labels: labels,
                        datasets: [{
                            data: data,
                            backgroundColor: chartColors.slice(0, labels.length)
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'top',
                            },
                            title: {
                                display: true,
                                text: 'Câu hỏi ' + questionId + ': ' + (chartType === 'bar' ? 'Biểu đồ cột' : 'Biểu đồ tròn')
                            },
                            tooltip: {
                                callbacks: {
                                    label: function (context) {
                                        var label = context.label || '';
                                        var value = context.raw || 0;
                                        var count = optionCounts[label] || 0;
                                        return label + ': ' + value.toFixed(1) + '% (' + count + ' lựa chọn)';
                                    }
                                }
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                display: chartType === 'bar'
                            }
                        }
                    }
                });
            });

            $('.rating-bars').each(function () {
                var statistics = $(this).data('statistics').split(', ');
                statistics.forEach(function (stat) {
                    var parts = stat.split(': ');
                    var stars = parseInt(parts[0].split(' ')[0]);
                    var percentage = parseFloat(parts[1]);
                    $(this).find('.rating-bar').eq(5 - stars).find('.progress-bar').css('width', percentage + '%');
                    $(this).find('.rating-bar').eq(5 - stars).find('.percent').text(percentage.toFixed(1) + '%');
                }.bind(this));
            });
        }

    function initializeDataTables() {
        console.log("Initializing DataTables");

        $('.survey-data-table').each(function () {
            if ($.fn.DataTable.isDataTable(this)) {
                $(this).DataTable().destroy();
            }
            $(this).DataTable({
                "paging": true,
                "lengthChange": true,
                "searching": true,
                "ordering": true,
                "info": true,
                "autoWidth": false,
                "responsive": true,
                "language": {
                    "zeroRecords": "Không tìm thấy dữ liệu",
                    "info": "Hiển thị trang _PAGE_ / _PAGES_",
                    "infoEmpty": "Không có dữ liệu",
                    "infoFiltered": "(lọc từ _MAX_ dòng)",
                    "search": "Tìm kiếm:",
                    "paginate": {
                        "first": "Đầu",
                        "last": "Cuối",
                        "next": "Tiếp",
                        "previous": "Trước"
                    }
                }
            });
        });
    }

        $(document).ready(function () {
            $('#logoutButton').click(function (e) {
                e.preventDefault();
                $.ajax({
                    url: '@Url.Action("Logout", "Account")',
                    type: 'POST',
                    success: function (result) {
                        if (result.success) {
                            window.location.href = result.redirectUrl;
                        } else {
                            console.log('Logout failed');
                        }
                    },
                    error: function (error) {
                        console.log('Logout error:', error);
                    }
                });
            });
        });
    </script>
   
}