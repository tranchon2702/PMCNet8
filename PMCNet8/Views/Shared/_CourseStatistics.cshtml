@model CourseStatisticViewModel

<!-- Course Info -->
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <p>
                    <strong>Loại khóa học:</strong>
                    <span>
                        @switch (Model.CourseInfo.Type)
                        {
                            case 0:
                                @:Khóa học có cấp chứng chỉ
                                break;
                            case 1:
                                @:Khóa học không cấp chứng chỉ
                                break;
                            case 2:
                                @:Khóa học cập nhật kiến thức
                                break;
                        }
                    </span>
                </p>
                <p><strong>Số lượng bài học:</strong> <span>@Model.CourseInfo.Quantity</span></p>
                <p><strong>Mô tả khóa học:</strong> <span>@Html.Raw(Model.CourseInfo.Description)</span></p>
            </div>
        </div>
    </div>
</div>

<!-- Charts -->
@if (Model.CourseInfo.Type == 0)
{
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Tình hình cấp phát và sử dụng mã khóa học</h3>
                </div>
                <div class="card-body">
                    <p><strong>Tổng mã cấp phát: </strong><span>@Model.CourseInfo.TotalKeys</span></p>
                    <div id="pie-chart" style="height: 450px;"></div>
                    <div class="chart-legend">
                        <div class="legend-item">
                            <span class="legend-color" style="background-color: #28a745;"></span>
                            <span><strong>Đã sử dụng: </strong><span>@Model.CourseInfo.UsedKeys</span></span>
                        </div>
                        <div class="legend-item">
                            <span class="legend-color" style="background-color: #ffc107;"></span>
                            <span><strong>Chưa sử dụng: </strong><span>@Model.CourseInfo.UnusedKeys</span></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<!-- LineCharts -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Tình hình đạt chỉ tiêu</h3>
            </div>
            <div class="card-body">
                @if (Model.AchieveTargets != null)
                {
                    <p>
                        <strong>
                            Chỉ tiêu:
                            @if (Model.AchieveTargets.TargetStartDate != null && Model.AchieveTargets.TargetEndDate != null)
                            {
                                @($"từ {Model.AchieveTargets.TargetStartDate:dd/MM/yyyy} - {Model.AchieveTargets.TargetEndDate:dd/MM/yyyy}")
                                if ((Model.AchieveTargets.TargetJoin != null && Model.AchieveTargets.TargetJoin != 0)&&(Model.AchieveTargets.TargetFinish != null && Model.AchieveTargets.TargetFinish != 0))
                                {
                                    @($": {Model.AchieveTargets.TargetJoin} tham gia & {Model.AchieveTargets.TargetFinish} hoàn thành khóa học")
                                }
                            }
                            else
                            {
                                <span></span>
                            }
                        </strong>
                    </p>
                }
                <div id="curve_chart" style="width: 100%; height: 400px;"></div>     
                <div class="chart-legend">
                    <div class="chart-legend">
                        <div class="legend-item">
                            <span class="legend-color" style="background-color: #28a745;"></span>
                            <span>Tham gia học</span>
                        </div>
                        <div class="legend-item"> 
                            <span class="legend-color" style="background-color: #FF0000;"></span>
                            <span>Xem hết tất cả bài học</span>
                        </div>
                        <div class="legend-item">
                            <span class="legend-color" style="background-color: #007bff;"></span> 
                            <span>Hoàn thành bài kiểm tra</span> 
                        </div>
                        <div class="legend-item">
                            <span class="legend-color" style="background-color: #ffc107;"></span>
                            <span>Vượt qua bài kiểm tra</span>
                        </div>
                        <div class="legend-item">
                            <span class="legend-color" style="background-color: #6c757d;"></span>
                            <span>Không vượt qua bài kiểm tra</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Table -->
@if (Model.CourseInfo.Type == 0) // Chỉ hiển thị khi khóa học có cấp chứng chỉ
{
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-dark text-white">
                    <h3 style="color:white" class="card-title">Danh sách các Dược sĩ được cấp chứng chỉ</h3>
                    <button style="height:28px" id="exportCompletedButton" class="btn btn-success float-right btn-xs"><i class="fas fa-file-excel"></i>  Xuất file Excel</button>
                </div>
                <div class="card-body">
                    <table id="pharmacistTable" class="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>Tên Dược sĩ</th>
                                <th>Số điện thoại</th>
                                <th>Đơn vị công tác</th>
                                <th>Địa chỉ</th>
                                <th>Thời gian hoàn thành</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var pharmacist in Model.UnregisteredPharmacists)
                            {
                                <tr>
                                    <td>@pharmacist.TenDuocSi</td>
                                    <td>@pharmacist.SoDienThoai</td>
                                    <td>@pharmacist.DonViCongTac</td>
                                    <td>@pharmacist.DiaChi</td>
                                    <td>@(pharmacist.NgayHoanThanh.ToString("dd/MM/yyyy HH:mm"))</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
}

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    var defaultSelectedCourseId = '@Model.SelectedCourseId';
    var pieData = @Html.Raw(Json.Serialize(Model.CourseInfo.PieData));
    var achieveTargets = @Html.Raw(Json.Serialize(Model.AchieveTargets));

    $(document).ready(function() {
        initializeDataTable();
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawChart);
    });
    function getAllDataTableData(tableId) {
        var table = $('#' + tableId).DataTable();
        return table.rows().data().toArray();
    }

    $("#exportCompletedButton").click(function () {
        exportTableToExcel("pharmacistTable", "danh_sach_duoc_si_da_hoc_bai.xlsx");
    });

    async function exportTableToExcel(tableId, fileName) {
        const data = getAllDataTableData(tableId);
        const headers = Array.from($('#' + tableId + ' thead th')).map(th => th.textContent.trim());

        const workbook = new ExcelJS.Workbook();
        const worksheet = workbook.addWorksheet('Học viên hoàn thành');

        // Add headers
        worksheet.addRow(headers);

        // Add data
        data.forEach(row => {
            worksheet.addRow(row);
        });

        // Style header row
        const headerRow = worksheet.getRow(1);
        headerRow.font = { bold: true, color: { argb: 'FFFFFF' } };
        headerRow.fill = {
            type: 'pattern',
            pattern: 'solid',
            fgColor: { argb: '4472C4' }
        };
        headerRow.alignment = { vertical: 'middle', horizontal: 'center' };

        // Auto-fit columns
        worksheet.columns.forEach((column, index) => {
            let maxLength = headers[index].length;
            column.eachCell({ includeEmpty: true }, (cell) => {
                const columnLength = cell.value ? cell.value.toString().length : 10;
                if (columnLength > maxLength) {
                    maxLength = columnLength;
                }
            });
            column.width = maxLength < 10 ? 10 : maxLength + 2;
        });

        // Add borders to all cells
        worksheet.eachRow((row, rowNumber) => {
            row.eachCell((cell) => {
                cell.border = {
                    top: { style: 'thin' },
                    left: { style: 'thin' },
                    bottom: { style: 'thin' },
                    right: { style: 'thin' }
                };
            });
        });

        // Freeze the header row
        worksheet.views = [
            { state: 'frozen', xSplit: 0, ySplit: 1, topLeftCell: 'A2', activeCell: 'A2' }
        ];

        // Add export date
        const exportDate = new Date().toLocaleString('vi-VN');
        worksheet.addRow([`Ngày xuất: ${exportDate}`]);

        // Generate Excel file
        const buffer = await workbook.xlsx.writeBuffer();
        const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = fileName;
        a.click();
        window.URL.revokeObjectURL(url);
        showExportSuccessNotification();
    }

    function showExportSuccessNotification() {
        Swal.fire({
            title: 'Xuất file thành công!',
            text: 'File Excel đã được tạo và tải xuống.',
            icon: 'success',
            confirmButtonText: 'OK'
        });
    }

</script>